// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SettingManagerApp.Persistence.Context;

#nullable disable

namespace SettingManagerApp.Persistence.Migrations
{
    [DbContext(typeof(SettingManagerDBContext))]
    [Migration("20240908053007_migv0.1-DummyDataEdited")]
    partial class migv01DummyDataEdited
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SettingManagerApp.Domain.Entities.AppConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationName = "SERVICE-PRODUCT",
                            IsActive = true,
                            Name = "SiteName",
                            Type = "string",
                            Value = "soty.io"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationName = "SERVICE-PRODUCT",
                            IsActive = true,
                            Name = "IsBasketEnabled",
                            Type = "bool",
                            Value = "1"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationName = "SERVICE-OTHER",
                            IsActive = true,
                            Name = "MaxItemCount",
                            Type = "int",
                            Value = "50"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationName = "SERVICE-PRODUCT",
                            IsActive = false,
                            Name = "Template",
                            Type = "string",
                            Value = "dark"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationName = "SERVICE-PRODUCT",
                            IsActive = true,
                            Name = "MaxProductCount",
                            Type = "int",
                            Value = "5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
